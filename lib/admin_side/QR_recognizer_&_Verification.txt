dependencies:
  flutter:
    sdk: flutter
  qr_code_scanner: ^0.6.0
import 'package:flutter/material.dart';
import 'package:qr_code_scanner/qr_code_scanner.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: QRScanScreen(),
    );
  }
}

class QRScanScreen extends StatefulWidget {
  @override
  _QRScanScreenState createState() => _QRScanScreenState();
}

class _QRScanScreenState extends State<QRScanScreen> {
  final GlobalKey<QrCodeScannerState> qrKey = GlobalKey<QrCodeScannerState>();
  String result = "Scan a QR Code"; // Default message before scanning.

  // Called when QRView is created and ready to scan.
  void _onQRViewCreated(QRViewController controller) {
    controller.scannedDataStream.listen((scanData) {
      setState(() {
        result = scanData.code; // Update result with the QR code data
      });
      controller.pauseCamera();  // Pause camera after scan (optional)
      _verifyQRCode(result);     // Verify the QR code after scanning
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("QR Code Scanner & Verifier"),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // QR scanner view (camera feed)
            Container(
              height: 300,
              width: 300,
              child: QRView(
                key: qrKey,
                onQRViewCreated: _onQRViewCreated,
                overlay: QrScannerOverlayShape(
                  borderColor: Colors.red,
                  borderRadius: 10,
                  borderLength: 30,
                  borderWidth: 10,
                  cutOutSize: 250, // Adjust scan area size
                ),
              ),
            ),
            SizedBox(height: 20),
            // Display the scanned QR code result
            Text(
              "Scanned Result: $result",
              style: TextStyle(fontSize: 18),
            ),
          ],
        ),
      ),
    );
  }

  // QR Code verification logic
  void _verifyQRCode(String qrData) {
    // Example of a predefined valid QR code value for verification.
    if (qrData == "valid_qr_code_value") {
      // Show success dialog if the QR code is valid
      _showDialog("Success", "QR Code is verified!");
    } else {
      // Show failure dialog if the QR code is invalid
      _showDialog("Failure", "Invalid QR Code!");
    }
  }

  // Show a dialog with the verification result
  void _showDialog(String title, String message) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: Text(title),
        content: Text(message),
        actions: [
          TextButton(
            onPressed: () {
              Navigator.pop(context);  // Close the dialog
            },
            child: Text("OK"),
          ),
        ],
      ),
    );
  }
}
 